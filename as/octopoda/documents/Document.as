// ActionScript Documentpackage octopoda.documents {	import octopoda.display.Display;	import octopoda.modules.Module;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;		public class Document extends octopoda.display.Display {		public var elements:Array;		public var loader:URLLoader;		public var settings:XML;				public var procentLoaded:int = -1;				public function Document() {			elements = new Array();						loaderInfo.addEventListener(Event.INIT, onLoaderInfoInit);			loaderInfo.addEventListener(ProgressEvent.PROGRESS, onLoaderInfoProgress);			loaderInfo.addEventListener(Event.COMPLETE, onLoaderInfoComplete);						loader = new URLLoader();			loader.addEventListener(Event.COMPLETE,onLoaderComplete);			loader.load(new URLRequest(Config.SETTINGS_PATH));		}				public function get isTotal():Boolean {			return (isSettings && isLoaded);		}		public function get isLoaded():Boolean {			return (loaderInfo.bytesLoaded == loaderInfo.bytesTotal);		}		public function get isSettings():Boolean {			return (settings !== null && !settings.@load.length());		}				private function onLoaderInfoInit(event:Event):void {			procentLoaded = 0;		}		private function onLoaderInfoProgress(event:ProgressEvent):void {			procentLoaded = Math.floor((event.bytesLoaded/event.bytesTotal)*100);		}		private function onLoaderInfoComplete(event:Event):void {			procentLoaded = 100;		}		private function onLoaderComplete(event:Event):void {			settings = new XML(loader.data);						if(settings.@load.length()) {				loader.load(new URLRequest(settings.@load));			}		}		public function registerElement(element:octopoda.display.Display):uint {			return elements.push(element);		}		public function getElementByName(match:String,caller:Object=null):octopoda.display.Display {			var getElement:octopoda.display.Display;						for(var i:uint = 0; elements.length > i; i++) {				var element:octopoda.display.Display = elements[i] as octopoda.display.Display;				if(element.named && element.name == match && element !== caller) {					getElement = element;					break;				}			}						return getElement;		}		public function getElementByPseudoName(match:String,caller:Object=null):octopoda.display.Display {			var getElement:octopoda.display.Display;						for(var i:uint = 0; elements.length > i; i++) {				var element:octopoda.display.Display = elements[i] as octopoda.display.Display;				if(element.named && element.pseudoName == match && element !== caller) {					getElement = element;					break;				}			}						return getElement;		}		public function getElementByPseudo(pseudo:octopoda.display.Display):octopoda.display.Display {			return getElementByPseudoName(pseudo.pseudoName,pseudo);		}	}}